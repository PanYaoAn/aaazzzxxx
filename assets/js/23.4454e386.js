(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{189:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("###Vuex是什么？\nVueX 是一个专门为 Vue.js 应用设计的状态管理架构，统一管理和维护各个vue组件的可变化状态(你可以理解成 vue 组件里的某些 data )。")]),t._v(" "),s("p",[t._v("###vuex的五个核心属性？\n五个核心概念：state、getters、actions、mutations、modules")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),s("pre",[s("code",[t._v("state是vuex的基本数据\n由于vuex状态存储是响应式的，所以vue组件从store中获取状态最简单的方法就是写在计算属性中\n通过在根实例中注册 store 选项，该 store 实例会注入到根组件下的所有子组件中，且子组件能通过 this.$store 访问到\n// 创建一个 Counter 组件\nconst Counter = {\n  template: `<div>"+t._s(t.count)+"</div>`,\n  computed: {\n    count () {\n      return store.state.count\n    }\n  }\n}\n每当 store.state.count 变化的时候, 都会重新求取计算属性，并且触发更新相关联的 DOM。\n")])])])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"vuex的五个核心属性及辅助函数介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex的五个核心属性及辅助函数介绍"}},[this._v("#")]),this._v(" Vuex的五个核心属性及辅助函数介绍")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[this._v("#")]),this._v(" 总结")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("state => 基本数据 \ngetters => 从基本数据派生的数据 \nmutations => 提交更改数据的方法，同步！ \nactions => 像一个装饰器，包裹mutations，使之可以异步。 \nmodules => 模块化Vuex\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-state"}},[this._v("#")]),this._v(" 1.state")])}],!1,null,null,null);e.default=a.exports}}]);