(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{169:function(e,n,t){"use strict";t.r(n);var s=t(0),o=Object(s.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"content"},[n("p",[this._v("#JS AJAX\n##第一种\nvar request = new XMLHttpRequest()\nrequest.open('GET','/url')\nrequest.onreadystatechange = function(){\nif(requset.readyState === 4){\n// HTTP 状态在 200-300 之间表示请求成功\n// HTTP 状态为 304 表示请求内容未发生改变，可直接从缓存中读取\nconsole.log('请求完成')\nif(requset.status >= 200 && requset.status < 300){\nconsole.log('请求成功', request.reponseText)\n}else{\nconsole.log('请求失败')\n}\n}\n}\nrequset.send()\n##第二种\nvar request = new XMLHttpRequest()")]),this._v(" "),n("pre",[n("code",[this._v("request.open('GET', '/a/b/c?name=ff', true)\n\nrequest.onload = ()=> console.log(request.responseText)\n\nrequest.send()\n")])]),this._v(" "),n("p",[this._v("##当用户网络不佳时 设置超时时间\nrequest.timeout = 5000\n//当请求超时时会触发\nrequest.ontimeout = ()=>{\nconsole.log('请求超时')\n}")])])}],!1,null,null,null);n.default=o.exports}}]);