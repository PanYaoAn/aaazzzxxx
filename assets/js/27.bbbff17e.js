(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{193:function(e,s,r){"use strict";r.r(s);var t=r(0),a=Object(t.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,s=e.$createElement,r=e._self._c||s;return r("div",{staticClass:"content"},[r("h2",{attrs:{id:"axios的简单封装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#axios的简单封装"}},[e._v("#")]),e._v(" axios的简单封装")]),e._v(" "),r("h3",{attrs:{id:"下载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[e._v("#")]),e._v(" 下载")]),e._v(" "),r("pre",[r("code",[e._v("npm install axios -S\n")])]),e._v(" "),r("h3",{attrs:{id:"全局引入"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#全局引入"}},[e._v("#")]),e._v(" 全局引入")]),e._v(" "),r("p",[e._v("在main.js进行全局注册")]),e._v(" "),r("pre",[r("code",[e._v("import axios from 'axios'\nVue.prototype.$axios = axios\n")])]),e._v(" "),r("h3",{attrs:{id:"创建axios文件夹"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建axios文件夹"}},[e._v("#")]),e._v(" 创建axios文件夹")]),e._v(" "),r("pre",[r("code",[e._v("在src创建api文件夹 在创建axios文件夹\n在axios文件夹里面新建另一个server.js文件和request.js文件\n")])]),e._v(" "),r("h3",{attrs:{id:"_1-在server-js文件中-创建axios实例-并请求拦截"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-在server-js文件中-创建axios实例-并请求拦截"}},[e._v("#")]),e._v(" 1.在server.js文件中 创建axios实例 并请求拦截")]),e._v(" "),r("pre",[r("code",[e._v("import axios from 'axios'\n//创建axios实例\nconst service = axios.create({})\n    // t添加拦截器\nservice.interceptors.request.use(config => {\n        console.log('正在请求')\n        return config\n    })\n    // 添加响应拦截\nservice.interceptors.response.use(response => {\n    console.log('请求成功')\n    return response.data\n}, error => {\n    console.log('TLC:error', error)\n    return Promise.reject(error)\n})\nexport default service;\n")])]),e._v(" "),r("h3",{attrs:{id:"_2-在request-js中进行封装获取数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-在request-js中进行封装获取数据"}},[e._v("#")]),e._v(" 2.在request.js中进行封装获取数据")]),e._v(" "),r("pre",[r("code",[e._v('import axios from "./Server"\nexport class firstApi {\n    static getFisrtList() {\n        return axios.get(`http://192.168.0.103:8081/index`)\n\t\t.then(res => res)\n    }\n}\n')])])])}],!1,null,null,null);s.default=a.exports}}]);